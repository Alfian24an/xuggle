#!/bin/sh

# Modify this script to pass the necessary parameters to 
# the configure of the captive package you're configuring
prefix="@prefix@"
exec_prefix="@exec_prefix@"
HOST_TYPE=@HOST_TYPE@
HOST_OS=@HOST_OS@

VS_ENABLE_64BIT=@VS_ENABLE_64BIT@
VS_DEBUG=@VS_DEBUG@

CAPTIVE_ENABLE_LIBVORBIS=@CAPTIVE_ENABLE_LIBVORBIS@
CAPTIVE_ENABLE_LIBTHEORA=@CAPTIVE_ENABLE_LIBTHEORA@
CAPTIVE_ENABLE_LIBSPEEX=@CAPTIVE_ENABLE_LIBSPEEX@
CAPTIVE_ENABLE_LIBX264=@CAPTIVE_ENABLE_LIBX264@
CAPTIVE_ENABLE_LIBMP3LAME=@CAPTIVE_ENABLE_LIBMP3LAME@
CAPTIVE_ENABLE_LIBFAAC=@CAPTIVE_ENABLE_LIBFAAC@
CAPTIVE_ENABLE_FFMPEG_GPL=@VS_ENABLE_GPL@

FFMPEG_OPTIONS=
# Tell FFMPEG about the captive libraries already built and fake
# installed
FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=-I@abs_top_builddir@@includedir@"
FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=-L@abs_top_builddir@@libdir@"

FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-shared"
#FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-runtime-cpudetect"

if test "x$CAPTIVE_ENABLE_FFMPEG_GPL" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-gpl --enable-nonfree"
fi
FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-version3"

if test ! "x$VS_DEBUG" = "x"; then
  echo "Creating debug version of ffmpeg: $VS_DEBUG"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --disable-stripping"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --disable-optimizations"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --disable-mmx"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --disable-mmx2"
else
  echo "Creating release version of ffmpeg: $VS_DEBUG"
fi
if test "x$CAPTIVE_ENABLE_LIBX264" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libx264"
fi
if test "x$CAPTIVE_ENABLE_LIBMP3LAME" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libmp3lame"
fi
if test "x$CAPTIVE_ENABLE_LIBVORBIS" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libvorbis"
fi
if test "x$CAPTIVE_ENABLE_LIBTHEORA" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libtheora"
fi
if test "x$CAPTIVE_ENABLE_LIBSPEEX" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libspeex"
fi
if test "x$CAPTIVE_ENABLE_LIBFAAC" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-libfaac"
fi

if test "x$VS_ENABLE_64BIT" = "xyes"; then
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=-m64"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=-m64"
fi

case $HOST_TYPE in
  Windows)
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=-mno-cygwin"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=-fno-common"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=-mno-cygwin"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=--out-implib"

  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-w32threads"
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-memalign-hack"
  ;;
  Mac)
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-pthreads"
  if test "x$VS_ENABLE_64BIT" = "xyes"; then
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --arch=x86_64"
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=-arch"
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-cflags=x86_64"
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=-arch"
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --extra-ldflags=x86_64"
    # unfortunately YASM builds on x86_64 are broken
    # see: http://lists.mplayerhq.hu/pipermail/ffmpeg-devel/2009-February/061286.html
    # this works around it
    FFMPEG_OPTIONS="$FFMPEG_OPTIONS --disable-yasm"
  fi
  ;;
  Linux)
  FFMPEG_OPTIONS="$FFMPEG_OPTIONS --enable-pthreads"
  ;;
  *)
  ;;
esac

echo "Copying @abs_srcdir@/csrc to @abs_builddir@/csrc"
# create the directory
mkdir -p @abs_builddir@
# copy over all the source
cp -r @abs_srcdir@/csrc @abs_builddir@/
# and make everything user writeable so distcheck will pass
chmod -R u+w @abs_builddir@/csrc
# copy over all patches
if [ -d @abs_srcdir@/patches ]; then
  cp -r @abs_srcdir@/patches @abs_builddir@/
  # and make everything user writeable so distcheck will pass
  chmod -R u+w @abs_builddir@/patches
fi
# Apply patches if any
case $HOST_TYPE in
  Windows)
  if [ -d @abs_builddir@/patches ]; then
    # I shit you not, this needs to happen due to patch
    # on windows 32.  Sit back, drink some coffee, and wait
    find @abs_builddir@/patches -exec dos2unix \{\} \;
    find @abs_builddir@/csrc -exec dos2unix \{\} \;
  fi
  ;;
  *)
  ;;
esac
if [ -d @abs_builddir@/patches ]; then
  cd @abs_builddir@/csrc
  for patch in @abs_builddir@/patches/*; do
    if [ -f "$patch" ]; then
      echo "Applying patch: ${patch}"
      patch -p0 --input="$patch" --ignore-whitespace
      if test "$?" -ne 0; then
        echo "Could not apply patch: $patch"
        exit 255
      else
        echo "Applied patch: ${patch}"
      fi
    fi
  done
fi
if [ -d @abs_builddir@/patches ]; then
  rm -rf @abs_builddir@/patches
fi

echo "Configuring FFMPEG with these options: $FFMPEG_OPTIONS"
cd @abs_builddir@/csrc
sh ./configure \
  --prefix="${prefix}" $FFMPEG_OPTIONS || \
  (echo "Could not configure library: \"@abs_srcdir@\"; you may want to try disabling it or installing your own version" && exit 1)
